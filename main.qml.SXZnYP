import QtQuick 2.12
import QtQuick.Controls 2.12
import QtQuick.Window 2.12

ApplicationWindow {
    visible: true
    width: 640
    height: 480
    title: qsTr("Sensor Reader")
    color: "#454545" // Background color

    // Define a centralized theme
    property color backgroundColor: "#454545"
    property color textColor: "white"
    property color highlightColor: "yellow"
    property int fontSize: 24
    property int buttonWidth: 100
    property int buttonHeight: 40

    FontLoader {
        id: digitalFont
        source: "qrc:/font/DS-DIGI.TTF"
    }

    // Global font properties
    font.family: digitalFont.name
    font.pointSize: fontSize

    Column {
        width: parent.width
        spacing: 20
        id: mainColumn

        // Row for buttons at the top
        Row {
            spacing: 10
            anchors.horizontalCenter: parent.horizontalCenter

            Button {
                width: buttonWidth
                height: buttonHeight
                onClicked: mainColumn.state = "Home"
                contentItem: Image {
                    source: "../img/homebutton.png"
                    fillMode: Image.PreserveAspectFit
                    width: buttonWidth
                    height: buttonHeight
                }
            }

            Button {
                width: buttonWidth
                height: buttonHeight
                text: "Light"
                onClicked: mainColumn.state = "Light"
            }

            Button {
                width: buttonWidth
                height: buttonHeight
                text: "Time"
                onClicked: mainColumn.state = "Time"
            }

            Button {
                width: buttonWidth
                height: buttonHeight
                text: "Humidity"
                onClicked: mainColumn.state = "Humidity"
            }

            Button {
                width: buttonWidth
                height: buttonHeight
                text: "Pressure"
                onClicked: mainColumn.state = "Pressure"
            }

            Button {
                width: buttonWidth
                height: buttonHeight
                text: "Temp"
                onClicked: mainColumn.state = "Temp"
            }
        }

        // Home GridView Layout
        GridView {
            id: homeGridView
            visible: mainColumn.state === "Home"
            width: parent.width
            height: parent.height - mainColumn.height - 20
            cellWidth: parent.width / 3
            cellHeight: (parent.height - mainColumn.height - 20) / 3

            model: ListModel {
                ListElement { label: "10.06.2024" }
                ListElement { label: "Hostname\nIP" }
                ListElement { label: "" }
                ListElement { label: "67%" }
                ListElement { label: "10:45" }
                ListElement { label: "500 hPa" }
                ListElement { label: "27Â°C" }
                ListElement { label: "" }
                ListElement { label: "" }
            }

            delegate: Item {
                width: homeGridView.cellWidth
                height: homeGridView.cellHeight

                Rectangle {
                    anchors.fill: parent
                    color: "transparent"
                    border.color: "white"
                    border.width: 1

                    Text {
                        anchors.centerIn: parent
                        text: model.label
                        font.family: digitalFont.name
                        font.pointSize: 24
                        color: textColor
                        horizontalAlignment: Text.AlignHCenter
                        verticalAlignment: Text.AlignVCenter
                    }
                }
            }
        }
    }

    // Image in the center of the screen
    Image {
        id: displayImage
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.verticalCenter: parent.verticalCenter
        visible: mainColumn.state === "Light"
        width: 200  // Larger width
        height: 200 // Larger height
        source: sensorReader.sensorValue ? "../img/Moon.png" : "../img/Sun.png"
    }
}
